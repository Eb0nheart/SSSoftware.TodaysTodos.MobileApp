# Rules in this file were initially inferred by Visual Studio IntelliCode from the C:\Users\Simon\Desktop\SSSoftware\SSSoftware.TodaysTodos.MobileApp codebase based on best match to current usage at 15-10-2021 # You can modify the rules from these initially generated values to suit your own policies # You can learn more about editorconfig here: https: //docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
[ *.cs ] #Core editorconfig formatting - indentation #use soft tabs (spaces) for indentation indent_style = space #Formatting - organize using options #sort System.* using directives alphabetically, and place them before other usings dotnet_sort_system_directives_first = true #Formatting - spacing options #require a space before the colon for bases or interfaces in a type declaration csharp_space_after_colon_in_inheritance_clause = true #require a space before the colon for bases or interfaces in a type declaration csharp_space_before_colon_in_inheritance_clause = true #remove space between method call name and opening parenthesis csharp_space_between_method_call_name_and_opening_parenthesis = false #do not place space characters after the opening parenthesis and before the closing parenthesis of a method call csharp_space_between_method_call_parameter_list_parentheses = false #place a space character after the opening parenthesis and before the closing parenthesis of a method declaration parameter list. csharp_space_between_method_declaration_parameter_list_parentheses = false #Formatting - wrapping options #leave code block on separate lines csharp_preserve_single_line_blocks = false #Style - expression bodied member options #prefer block bodies for accessors csharp_style_expression_bodied_accessors = false:suggestion #prefer block bodies for constructors csharp_style_expression_bodied_constructors = false:suggestion #prefer block bodies for properties csharp_style_expression_bodied_properties = false:suggestion #Style - language keyword and framework type options #prefer the language keyword for local variables, method parameters, and class members, instead of the type name, for types that have a keyword to represent them dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion #Style - modifier options #prefer accessibility modifiers to be declared except for public interface members. This will currently not differ from always and will act as future proofing for if C# adds default interface methods. dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion #Style - Modifier preferences #when this rule is set to a list of modifiers, prefer the specified ordering. csharp_preferred_modifier_order = public,protected,private,override:suggestion #Style - qualification options #prefer fields not to be prefaced with this. or Me. in Visual Basic dotnet_style_qualification_for_field = false:suggestion #prefer properties not to be prefaced with this. or Me. in Visual Basic dotnet_style_qualification_for_property = false:suggestion [
  *.
  {
    cs,
    vb
  }
] indent_style=tab [ *.cs ] csharp_using_directive_placement=outside_namespace:error csharp_prefer_braces=true:error csharp_style_namespace_declarations=block_scoped:error csharp_style_expression_bodied_properties=true:warning csharp_style_expression_bodied_accessors=true:error csharp_style_expression_bodied_lambdas=true:warning csharp_style_pattern_local_over_anonymous_function=true:warning csharp_style_unused_value_assignment_preference=unused_local_variable:suggestion csharp_style_allow_embedded_statements_on_same_line_experimental=true:error csharp_style_allow_blank_lines_between_consecutive_braces_experimental=true:error csharp_style_prefer_switch_expression=true:warning csharp_style_prefer_pattern_matching=true:warning csharp_style_var_elsewhere=true:warning csharp_style_var_when_type_is_apparent=true:warning csharp_style_var_for_built_in_types=false:error # CS8618: Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable. dotnet_diagnostic.CS8618.severity = none [
  *.
  {
    cs,
    vb
  }
] dotnet_style_prefer_is_null_check_over_reference_equality_method=true:error dotnet_style_prefer_compound_assignment=true:error dotnet_style_prefer_simplified_interpolation=true:error dotnet_style_namespace_match_folder=true:error dotnet_style_readonly_field=true:warning dotnet_style_require_accessibility_modifiers=for_non_interface_members:error dotnet_style_allow_multiple_blank_lines_experimental=true:error dotnet_style_allow_statement_immediately_after_block_experimental=true:error dotnet_code_quality_unused_parameters=all:error

dotnet_naming_rule.private_members_with_underscore.symbols  = private_fields
dotnet_naming_rule.private_members_with_underscore.style    = prefix_underscore
dotnet_naming_rule.private_members_with_underscore.severity = error

dotnet_naming_symbols.private_fields.applicable_kinds           = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

dotnet_naming_style.prefix_underscore.capitalization = camel_case
dotnet_naming_style.prefix_underscore.required_prefix = _
[*.cs]

# CS8618: Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.
dotnet_diagnostic.CS8618.severity = none
